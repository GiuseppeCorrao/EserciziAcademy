Ho dubbi su questo esercizio.

https://www.hackerrank.com/challenges/prime-checker/problem?isFullScreen=true

import java.io.*;
import java.util.*;

class Prime{
    
    public int checkPrime(int...args){
        
    int num = args[0];
    int count = 0;
    
        for(int i = 1; i < args.length; i++){
            int numIesimo = args[i];
                
                if(num / numIesimo == 0 || num / num == 0 ){
                    count++;
                }
                
        }
        return count;
    }
}


public class Solution {

    public static void main(String[] args) {
        try{
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        int n1=Integer.parseInt(br.readLine());
        int n2=Integer.parseInt(br.readLine());
        int n3=Integer.parseInt(br.readLine());
        int n4=Integer.parseInt(br.readLine());
        int n5=Integer.parseInt(br.readLine());
        Prime ob=new Prime();
        ob.checkPrime(n1);
        ob.checkPrime(n1,n2);
        ob.checkPrime(n1,n2,n3);
        ob.checkPrime(n1,n2,n3,n4,n5);    
        Method[] methods=Prime.class.getDeclaredMethods();
        Set<String> set=new HashSet<>();
        boolean overload=false;
        for(int i=0;i<methods.length;i++)
        {
            if(set.contains(methods[i].getName()))
            {
                overload=true;
                break;
            }
            set.add(methods[i].getName());
            
        }
        if(overload)
        {
            throw new Exception("Overloading not allowed");
        }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }
    
}
