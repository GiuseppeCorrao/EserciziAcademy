https://www.hackerrank.com/challenges/simple-addition-varargs/problem?isFullScreen=true

import java.io.*;
import java.lang.reflect.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

class Add{
    
    List<Integer> listOfInt= new ArrayList<>();
    int result = 0;
    
    public void add(int o,int o1){
        result = o+o1;
        System.out.println(o + "+" + o1 + "=" + result);
    }
    
    
    public void add(int o,int o1,int o2){
        result = o+o1+o2;
        System.out.println(o + "+" + o1 + "+" +o2 + "=" +result );
    }
    
    public void add(int o,int o1,int o2,int o3){
        result = o+o1+o2+o3;
        System.out.println(o + "+" + o1 + "+" +o2 +"+"+ o3+"=" +result);
    }
    public void add(int o,int o1,int o2,int o3,int o4){
        result = o+o1+o2+o3+o4;
        System.out.println(o + "+" + o1 + "+" +o2 +"+"+ o3+"+"+o4 +"=" +result );
    }
    public void add(int o,int o1,int o2,int o3,int o4,int o5){
        result = o+o1+o2+o3+o4+o5;
        System.out.println(o + "+" + o1 + "+" +o2 +"+"+ o3+"+"+ o4+"+"+o5+"=" + result);
    }

}

public class Solution {

    public static void main(String[] args) {
       try{
			BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
			int n1=Integer.parseInt(br.readLine());
			int n2=Integer.parseInt(br.readLine());
			int n3=Integer.parseInt(br.readLine());
			int n4=Integer.parseInt(br.readLine());
			int n5=Integer.parseInt(br.readLine());
			int n6=Integer.parseInt(br.readLine());
			Add ob=new Add();
			ob.add(n1,n2);
			ob.add(n1,n2,n3);
			ob.add(n1,n2,n3,n4,n5);	
			ob.add(n1,n2,n3,n4,n5,n6);
			Method[] methods=Add.class.getDeclaredMethods();
			Set<String> set=new HashSet<>();
			boolean overload=false;
			for(int i=0;i<methods.length;i++)
			{
				if(set.contains(methods[i].getName()))
				{
					overload=true;
					break;
				}
				set.add(methods[i].getName());
				
			}
			if(overload)
			{
				throw new Exception("Overloading not allowed");
			}
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
		}
		
	
	

}


